basePath: /
definitions:
  models.Order:
    properties:
      done:
        type: boolean
      items:
        items:
          type: integer
        type: array
      order_id:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    name: API Support
  description: This is a sample serice for managing orders
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Orders API
  version: "1.0"
paths:
  /orders:
    get:
      consumes:
      - application/json
      description: Get orders
      parameters:
      - description: Filter by status
        in: query
        name: done
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/models.Order'
              type: array
            type: array
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get orders
      tags:
      - orders
    post:
      consumes:
      - application/json
      description: Add new order
      parameters:
      - description: Create order
        in: body
        name: items
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Insert new order
      tags:
      - orders
  /orders/{order_id}:
    get:
      consumes:
      - application/json
      description: Get order by ID
      parameters:
      - description: Order ID
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get order by ID
      tags:
      - orders
  /orders/{order_id}/done:
    get:
      consumes:
      - application/json
      description: Finish order by ID
      parameters:
      - description: Order ID
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Finish order by ID
      tags:
      - orders
  /orders/{order_id}/items:
    post:
      consumes:
      - application/json
      description: Add items to order
      parameters:
      - description: Order ID
        in: path
        name: order_id
        required: true
        type: string
      - description: update item list in order
        in: body
        name: items
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Add items to order
      tags:
      - orders
securityDefinitions:
  ApiKeyAuth:
    description: Very secret code, like qwerty123
    in: header
    name: X-Auth-Key
    type: apiKey
swagger: "2.0"
